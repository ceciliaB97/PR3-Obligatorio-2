@model Dominio.PaseLibre

@{
    ViewBag.Title = "CreatePaseLibre";
}

<h2>CreatePaseLibre</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PaseLibre</h4>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Nombre)
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoMembresia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TipoMembresia, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.TipoMembresia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            <strong>Pago final $</strong>@Model.calcularPagoFinal(Auxiliar.Facade.Configuration, ViewBag.Antiguedad)
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Confirmar Pago" class="btn btn-default" />
            </div>
        </div>
        @if (Model.FechaPago != null)
        {
            <p>Membresia creada exitosamente.</p>
        }

    </div>
}

